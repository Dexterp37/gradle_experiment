

// Configure the Python environments
envs {
    bootstrapDirectory = new File(buildDir, 'bootstrap')
    envsDirectory = new File(buildDir, 'envs')

    // Setup a miniconda environment.
    conda "Miniconda3", "Miniconda3-latest", "64", ["python-mozparsers==1.*"]
}

// Setup the python environment before the build starts.

task createBuildDir {
    description = "Make sure the build dir exists before creating the Python Environments"
    onlyIf {
        !file(buildDir).exists()
    }
    doLast {
        println "Creating build directory:" + buildDir.getPath()
        buildDir.mkdir()
    }
}

// Make sure that a build directory exists before attempting to download
// the Python environment in the preBuild step. This will fail if the directory
// doesn't exist.
preBuild.mustRunAfter(createBuildDir)
preBuild.dependsOn("build_envs")

// Generate the Metrics API
android.applicationVariants.all { variant ->
    def sourceOutputDir =  "$buildDir/telemetry/src/${variant.name}/kotlin"
    def generateKotlinAPI = task("generateMetricsSourceFor${variant.name.capitalize()}", type: Exec) {
        description = "Generate the Kotlin code for the Metrics API"

        workingDir  rootDir
        commandLine "$buildDir/bootstrap/Miniconda3/python"
        args "parsers/parser.py"
        args "metrics.yaml"
        args "$sourceOutputDir"

        // Only show the output if something went wrong.
        ignoreExitValue = true
        standardOutput = new ByteArrayOutputStream()
        errorOutput = standardOutput
        doLast {
            if (execResult.exitValue != 0) {
                throw new GradleException("Process '${commandLine}' finished with non-zero exit value ${execResult.exitValue}:\n\n${standardOutput.toString()}")
            }
        }
    }

    // This is an Android-Gradle plugin 3+-ism.  Culted from reading the source,
    // searching for "registerJavaGeneratingTask", and finding
    // https://github.com/GoogleCloudPlatform/endpoints-framework-gradle-plugin/commit/2f2b91476fb1c6647791e2c6fe531a47615a1e85.
    // The added directory doesn't appear in the paths listed by the
    // `sourceSets` task, for reasons unknown.
    variant.registerJavaGeneratingTask(generateKotlinAPI, new File(sourceOutputDir))
}